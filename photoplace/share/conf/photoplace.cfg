# Default configuration file for PhotoPlace v0.5.0
# This file must be encoded in UTF-8.

[main]
# Version of the configuration file. It will be overwrited if version is minor
# that the version of program.
version = 05003
# You can set up those files to read it at startup ...
;PhotoInputDir = eume
;GPXInputFile = eume.gpx
;OutputFile = eume.kmz
# Log setup
;LogFile = photoplace.log
# Log level for logfile: info, debug, warning or error
;LogLevel = debug
# URI to reference all photos. If you generate a KML for a web, this
# parameter will set the path where the photos are.
;PhotoURI =
;MaxDeltaSeconds = 300
;UTCZoneMinutes = 120
# Seconds (positive or negative) to add to the photos time in order to match
# with GPS data
;TimeOffsetSeconds = -60
# Output quality parameters
# 0 = {'img': Image.NEAREST,   'zip': zipfile.ZIP_DEFLATED }
# 1 = {'img': Image.BILINEAR,  'zip': zipfile.ZIP_DEFLATED }
# 2 = {'img': Image.BICUBIC,   'zip': zipfile.ZIP_STORED   }
# 3 = {'img': Image.ANTIALIAS, 'zip': zipfile.ZIP_STORED   }
;Quality = 1
# You can set a size of regenerated photos (into KMZ or directory) ...
;JPGSize = 0,0
# ... or you can set a zoom factor from 0.0 to 1.0.
# Ah!, "JPGSize" takes preference!
;JPGZoom = 0.15
# Main template (layout kml file)
# templates are usually in share directory, but the program search firstly
# in ~/.photoplace directory.
;KmlTemplate = layout.template.kml
# Write mode for exif data of original photos.
#  0 = write only if photo is not geotagged
#  1 = overwrite geodata
# -1 = no write exif data
;ExifMode = 1


[defaults]
# ## Main variables/parameters
Name =
Author =
Date =
Mailto =
ShortDescription =
Description =
License = Creative Commons
# Folder for photos in Google Earth
;PhotoFolder = Photos
# Default value for unknown data
;DefaultValue = -
# ## Other parameters that maybe you do not need to change ...
NormalPlacemark = http://maps.google.com/mapfiles/kml/pal4/icon38.png
NormalPlacemarkScale = 0.6
NormalPlacemarkColor = 5AFFFFFF
NormalPlacemarkLabelScale = 0.5
NormalPlacemarkLabelColor = 10FFFFFF
HighlightPlacemark = http://maps.google.com/mapfiles/kml/pal4/icon38.png
HighlightPlacemarkScale = 1.0
HighlightPlacemarkColor = C800FF00
HighlightPlacemarkLabelScale = 0.8
HighlightPlacemarkLabelColor = C8FFFFFF
HighlightPlacemarkBalloonBgColor = AA99FFFF
HighlightPlacemarkBalloonTextColor = FF000000
# Values for the position of the camera when kmz is loaded
;IniLatitute =
;IniLongitude =
;IniAltitude =
;IniRange = 0.0
;IniTilt = 10.0
;IniHeading = 0.0


[templates]
# Do not change this value!, except if you know what to do with this section ...
# There is the templates from the KML will be generated
;kml.Document.Folder.Placemark.description = PhotoDescription.xhtml
kml.Document.Folder.description = GlobalDescription.xhtml


[addons]
# Add-ons loaded at startup, path separator is always '/'
# addon[.py|.pyc|.pyo] = AddonDirAtSharePath/AddonPath
gpxdata = addons/GPXData
tour = addons/Tour
files = addons/Files


[tour]
# Parameters for 'tour' add-on
# Name for left folder in Google Earth. If you do not want a folder, set '-'
;FolderName = Tour
# Name of the tour in Google Earth.
;Name = Play Tour!
# A sort description
;Description =
# Follow the GPX path between photos
;FollowPath = 1
# WPTs in a track with minus separation will be ignored in the tour.
# If it is not set or is -1, it will be estimated (automatic)
;WPTSimplDistance =
# List of mp3's for background music, use ';' as separator
;MP3List =
# Mix all mp3? If yes, it will sound all mp3's at the same time
;MP3Mix = no
# URI to reference all mp3's. If you generate a KML for a web, this
# parameter will set the path where the files are.
;MP3URI =
# ## Parameters for first placemark (before your photos)
# Text file with a description for the tour.
# You can use simple HTML tags like list (li, ul) or table
# and use expresions like %(variable)s where variable is a
# key defined in the [defaults] section of this configuration file.
;BeginDescFile = <file>
# Style id for first placemark, for example: '#tour-first'. It is useful
# to use prefefined styles in the main template file ...
# If not set, it will be generated automatically from the values of 'BeginIcon'
# and 'BeginScale'.
;BeginStyle =
# URI for icon which be placed in first placemark/WayPoint
;BeginIcon = http://maps.google.com/mapfiles/kml/shapes/flag.png
# Size of icon of first placemark
;BeginScale = 0.8
# Seconds to wait in the first placemark
;BeginWait = 5
# Bearing (Heading in KML) to see first placemark.
# 0 degrees means that north is at top, east at right ...
# If it is not set, it will be estimated (automatic)
;BeginHeading =
# Seconds of fly time to get to first placemark
;BeginFlyTime = 8
# Tilt for the camera for see first placemark.
# O degrees means vertical, from the heaven. 90 means
# from the horizont.
;BeginTilt = 40
# Distance of the camera from the point, in meters. If it is between
# 0 and 10, the BeginRange will be computed multiplying the distance
# between the center of all photos and first placemark by this factor.
;BeginRange = 
# ## Parameters for photos.
;Wait = 7
# Black means estimated (automatic)
;Heading =
;FlyTime = 5
;Tilt = 45
# Distance of the camera from the point, in meters. If it is between
# 0 and 10, the range will be computed multiplying the distance
# between the position of previous photo and the position of current
# photo by this factor.
;Range = 
# ## Parameter for end point/placemark. The meaning is the same
;EndDescFile = <file>
;EndStyle =
;EndIcon = http://maps.google.com/mapfiles/kml/shapes/flag.png
;EndScale = 0.8
;EndHeading =
;EndFlyTime = 5
;EndTilt = 40
;EndRange = 


[gpxdata]
# Parameters for 'gpxdata' plugin
# Name of the folder which will contain all paths into Google Earth.
# If you do not want a folder, set '-'
;FolderName = Paths
# Generate a path with geoinfo of geotagged photos.
;GeneratePath = no
# Include tracks (paths) from GPS data (GPX)
;GenerateTrack = yes
# Include Points (waypoints) from GPS data (GPX)
;GenerateWPoints = yes
# You can setup a description template here ...
;WPointDescTemplate =
# ... or configure a template file ('WPointDescTemplate' takes preference)
;WPointTemplate = <file>
# URI for an icon for the WayPoints (IconStyle)
;WPointIcon = http://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png
# Size for the icon (IconStyle)
;WPointScale = 0.5
# Parameters for each path. Note the suffix number in each key.
# It means that of nth path will be asigned those parameters.
# If 'GenerateTrack' is active, the first path (*.0) always will be
# that generated path, and the next paths will be ordered by time.
;TrackName.0 = Photo path
# Path description Like in WPoint, this takes preference over 'TrackTemplate'
;TrackDescTemplate.0 = Generated path from geotagged photos
# Template file for path description. You can use simple HTML tags
# like list (li, ul) or table and use expresions like %(variable)s
# where variable is a key defined in the [defaults] section of this
# configuration file. You can also use this variables to get some
# interesting values ...
#   %(PhotoPlace.PathNAME)s -> Path name
#   %(PhotoPlace.PathDESC)s -> Path description
#   %(PhotoPlace.PathTINI)s -> Initial time (first point)
#   %(PhotoPlace.PathTEND)s -> End time (last point)
#   %(PhotoPlace.PathDRTN)s -> Duration
#   %(PhotoPlace.PathLEN)s -> Length (in meters)
#   %(PhotoPlace.PathLENMIN)s -> Minimum length
#   %(PhotoPlace.PathLENMAX)s -> Maximum length
#   %(PhotoPlace.PathSPMIN)s -> Minimum speed (m/s)
#   %(PhotoPlace.PathSPMAX)s -> Maximum speed (m/s)
#   %(PhotoPlace.PathSPAVG)s -> Average speed (m/s)
#   %(PhotoPlace.PathNSEG)s -> Number of segments
#   %(PhotoPlace.PathNWPT)s -> Number of waypoints
;TrackTemplate.0 = <file>
# Color for first path, p.e. 7fff0000, where alpha=0x7f, blue=0xff,
# green=0x00, and red=0x00.
;TrackColor.0 = 64FFFF00
# Width (in pixels) of geotagged photo-path
;TrackWidth.0 = 2
# For example, next key will force the name for first path
;TrackName.1 = Path
# First path description template. It Takes preference over 'TrackTemplate'
;TrackDescTemplate.1 =
# Template file for first track description
;TrackTemplate.1 = PathDescription.xhtml
# Color for first path, p.e. 7fff0000, where alpha=0x7f, blue=0xff,
# green=0x00, and red=0x00.
;TrackColor.1 = 7F0000FF
# Width (in pixels) of first path
;TrackWidth.1 = 4


[files]
# Parameters for 'files' add-on
#logo.jpg = /uri/$ENV_VAR/to/original/logo.jpg

# EOF
